res.say "Thank you. Please wait while we retrieve your status."

leg_status = @itenerary.itenerary_legs.map do |il|
  il.flight
end

if leg_status.all?{|ls| !ls.nil? || ['Active', 'Scheduled', 'Landed'].include?(ls.status)}
  res.say "Currently, all of your flights are on time."
else
  res.say "Some of your flights may be delayed, cancelled, diverted, or a record of it could not be retrieved. Please call or see your travel representative for more information or continue listening for more information."
end

if leg_status[0].departure_date_estimated > Time.now # in the future
  res.say "Your first flight is estimated to depart in #{distance_of_time_in_words_to_now(leg_status[0].departure_date_estimated)}."
end

if leg_status[-1].arrival_gate
  res.say "Your final flight (#{leg_status[-1].airline['Name']} flight #{leg_status[-1].flight_number}) is estimated to arrive in #{distance_of_time_in_words_to_now(leg_status[-1].arrival_date_estimated)}, at gate #{leg_status[-1].arrival_gate}, terminal #{leg_status[-1].arrival_terminal}."
else
  res.say "Your final flight (#{leg_status[-1].airline['Name']} flight #{leg_status[-1].flight_number}) is estimated to arrive in #{distance_of_time_in_words_to_now(leg_status[-1].arrival_date_estimated)}, terminal #{leg_status[-1].arrival_terminal}."
end

res.say "Your total estimated travel time is #{distance_of_time_in_words(leg_status[0].departure_date_estimated, leg_status[-1].arrival_date_estimated)}."

unless @itenerary.social_accounts.empty?
  res.say "To post a status update to linked social media accounts, enter your access code followed by the pound key."
  res.gather :action => voice_create_message_url(:itenerary_id => @itenerary.id), :timeout => 10
else
  res.say "Share your trip with your friends, link your social accounts to your wing pin itenerary. Just follow the easy steps presented after creating your iterary via the website or via e-mail. Thank you for using wing pin."
end
